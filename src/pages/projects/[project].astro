---
import Layout from '../../layouts/Default.astro';
import BigButton from '../../components/core/BigButton.astro';
import { getProjects, getContentBlockLibrary, logError, getPageInfo } from '../../scripts/astro-helpers';
import '../../styles/tiles.css';

// Dynamic routing
export async function getStaticPaths()
{
	const projects = getProjects();
	return projects.map((project) =>
	({
		params: { project : project.name },
		props: { project: project },
	}));
}

const { project } = Astro.props;

// Get content blocks
let contentBlockLibrary = getContentBlockLibrary();

// Layout variables
const pageInfo = getPageInfo({
	titlePrepend: project.data.title,
	description: project.data.description,
	image: `/assets/projects/${project.name}/thumb.jpg`,
	tab: 'projects'
});
---

<Layout pageInfo={pageInfo}>
	<div class="project-detail-wrapper">
		<div class="project-detail">
			<!-- Info -->
			<h1 class="project-title">{project.data.title}</h1>
			<div class="tag-wrapper">
				<div class="tag-row">
					{project.data.tags.map((tag) => (
						<div class="tag">{tag}</div>
					))}
				</div>
			</div>
			<!-- Links -->
			{project.data.links && (
				<div class="link-wrapper">
					{project.data.links.map((link) => (
						<a class="tile link-tile" href={link.link} target="_blank">
							<img class="link-tile-icon" src="/assets/svg/external-link.svg" alt="" onload="fadeIn(this);"/>
							<div class="link-tile-text">{link.title}</div>
						</a>
					))}
				</div>
			)}
			<!-- Content -->
			{project.data.page.map((block, index) =>
			{
				if (block.type in contentBlockLibrary)
				{
					const Component = contentBlockLibrary[block.type];
					return <Component
						project={project}
						contentBlock={{
							'index': index,
							'properties': block,
						}}
					/>
				}
				else
				{
					logError(`Unknown content type "${block.type}" is defined in ${project.data.title}`);
					return null;
				}
			})}
		</div>
	</div>
	<div class="back-to-projects-wrapper">
		<BigButton
			text="Back to projects"
			link="/projects/"
			icon="/assets/svg/folder-open.svg"
		/>
	</div>
</Layout>

<style>
	h1 {
		text-align: center;
	}

	body {
		opacity: 0;
	}

	.project-detail-wrapper {
		max-width: 1000px;
		margin: 30px auto;
	}

	.project-detail {
		padding: 0 52px;
		text-align: center;
		min-height: calc(100vh - 348px);
	}

	.back-to-projects-wrapper {
		text-align: center;
		margin: 50px 0px;
	}

	.project-title {
		margin: 20px 0 8px;
		font-size: 45px;
	}

	.tag-wrapper, .link-wrapper {
		margin-bottom: 20px;
		display: flex;
		justify-content: center;
	}

	.tag-row {
		padding: 4px 8px;
	}

	.tag {
		position: relative;
		font-family: 'Catamaran', sans-serif;
		font-weight: 600;
		display: inline-block;
		font-size: 18px;
		padding: 4px 8px;
		color: #333;
		background: #f0f0f0;
		border-radius: 4px;
		margin: 0px 3px;
	}

	.link-tile-icon {
		opacity: 0;
	}

	.link-tile {
		margin: 0px 6px;
		padding: 12px 20px;
		top: 0px;
		transition: all 0.1s ease;
		overflow: hidden;
	}

	.link-tile-icon {
		position: absolute;
		width: 15px;
		top: 14px;
		left: 17px;
	}

	.link-tile-text {
		margin-left: 22px;
	}

	@media (max-width: 776px) {
		.project-detail {
			padding: 0;
			min-height: calc(100vh - 324px);
		}

		.image-center, .project-detail-wrapper {
			margin: 0;
		}

		.back-to-projects-wrapper {
			margin-top: 40px;
		}

		.project-title {
			font-size: 36px;
		}

		.tag {
			margin-top: 3px;
			margin-bottom: 3px;
		}

		.tag-wrapper, .link-wrapper {
			flex-direction: column;
		}

		.link-tile {
			margin: 3px 22px;
		}
	}

	@media (min-width: 2101px) {
		.project-detail-wrapper {
			max-width: 1200px;
		}

		.project-detail {
			min-height: calc(100vh - 377px);
		}
	}
</style>